// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/zone.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ZoneDevice struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Device EUI (HEX encoded).
	DeviceDevEui string `protobuf:"bytes,1,opt,name=device_dev_eui,proto3" json:"device_dev_eui,omitempty"`
	// Name of the device.
	DeviceName string `protobuf:"bytes,5,opt,name=device_name,proto3" json:"device_name,omitempty"`
	// Description of the device.
	DeviceDescription string `protobuf:"bytes,6,opt,name=device_description,proto3" json:"device_description,omitempty"`
	// device landing alarms
	Data                   []*ZoneData          `protobuf:"bytes,12,rep,name=data,proto3" json:"data,omitempty"`
	DeviceProfileName      []*ZoneDeviceProfile `protobuf:"bytes,13,rep,name=device_profile_name,proto3" json:"device_profile_name,omitempty"`
	DeviceType             int64                `protobuf:"varint,14,opt,name=device_type,proto3" json:"device_type,omitempty"`
	TemperatureCalibration float64              `protobuf:"fixed64,15,opt,name=temperature_calibration,json=temperatureCalibration,proto3" json:"temperature_calibration,omitempty"`
	HumadityCalibration    float64              `protobuf:"fixed64,16,opt,name=humadity_calibration,json=humadityCalibration,proto3" json:"humadity_calibration,omitempty"`
	// New field for custom attributes
	// Variables (user defined).
	// These variables can be used together with integrations to store tokens /
	// secrets that must be configured per device. These variables are not
	// exposed in the event payloads.
	Variables map[string]string `protobuf:"bytes,17,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Tags to filter on.
	Tags          map[string]string `protobuf:"bytes,18,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoneDevice) Reset() {
	*x = ZoneDevice{}
	mi := &file_api_zone_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneDevice) ProtoMessage() {}

func (x *ZoneDevice) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneDevice.ProtoReflect.Descriptor instead.
func (*ZoneDevice) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{0}
}

func (x *ZoneDevice) GetDeviceDevEui() string {
	if x != nil {
		return x.DeviceDevEui
	}
	return ""
}

func (x *ZoneDevice) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *ZoneDevice) GetDeviceDescription() string {
	if x != nil {
		return x.DeviceDescription
	}
	return ""
}

func (x *ZoneDevice) GetData() []*ZoneData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ZoneDevice) GetDeviceProfileName() []*ZoneDeviceProfile {
	if x != nil {
		return x.DeviceProfileName
	}
	return nil
}

func (x *ZoneDevice) GetDeviceType() int64 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *ZoneDevice) GetTemperatureCalibration() float64 {
	if x != nil {
		return x.TemperatureCalibration
	}
	return 0
}

func (x *ZoneDevice) GetHumadityCalibration() float64 {
	if x != nil {
		return x.HumadityCalibration
	}
	return 0
}

func (x *ZoneDevice) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *ZoneDevice) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ZoneDeviceProfile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoneDeviceProfile) Reset() {
	*x = ZoneDeviceProfile{}
	mi := &file_api_zone_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneDeviceProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneDeviceProfile) ProtoMessage() {}

func (x *ZoneDeviceProfile) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneDeviceProfile.ProtoReflect.Descriptor instead.
func (*ZoneDeviceProfile) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{1}
}

func (x *ZoneDeviceProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ZoneData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Device EUI (HEX encoded).
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// name
	DevEui string `protobuf:"bytes,2,opt,name=dev_eui,proto3" json:"dev_eui,omitempty"`
	// temp_SHT of the device.
	DeviceTypeId int64 `protobuf:"varint,3,opt,name=device_type_id,proto3" json:"device_type_id,omitempty"`
	// hum_SHT.
	OrgId string `protobuf:"bytes,4,opt,name=org_id,proto3" json:"org_id,omitempty"`
	// water_SOIL of the device.
	AirTemperature float32 `protobuf:"fixed32,5,opt,name=air_temperature,proto3" json:"air_temperature,omitempty"`
	// temp_SOIL of the device.
	AirHumidity float32 `protobuf:"fixed32,6,opt,name=air_humidity,proto3" json:"air_humidity,omitempty"`
	// conduct_SOIL of the device.
	SolTemperature float32 `protobuf:"fixed32,7,opt,name=sol_temperature,proto3" json:"sol_temperature,omitempty"`
	// water_SOIL of the device.
	SolWater float32 `protobuf:"fixed32,8,opt,name=sol_water,proto3" json:"sol_water,omitempty"`
	// temp_SOIL of the device.
	SolConductSoil float32 `protobuf:"fixed32,9,opt,name=sol_conduct_soil,proto3" json:"sol_conduct_soil,omitempty"`
	// The last time the application-server received any data from the device,
	// or an empty string when the device never sent any data.
	SubmissionDate        string  `protobuf:"bytes,10,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
	WaterLeakStatus       int64   `protobuf:"varint,11,opt,name=water_leak_status,proto3" json:"water_leak_status,omitempty"`
	WaterLeakTimes        int64   `protobuf:"varint,12,opt,name=water_leak_times,proto3" json:"water_leak_times,omitempty"`
	LastWaterLeakDuration int64   `protobuf:"varint,13,opt,name=last_water_leak_duration,proto3" json:"last_water_leak_duration,omitempty"`
	DoorOpenStatus        int64   `protobuf:"varint,14,opt,name=door_open_status,proto3" json:"door_open_status,omitempty"`
	DoorOpenTimes         int64   `protobuf:"varint,15,opt,name=door_open_times,proto3" json:"door_open_times,omitempty"`
	LastDoorOpenDuration  int64   `protobuf:"varint,16,opt,name=last_door_open_duration,proto3" json:"last_door_open_duration,omitempty"`
	Batv                  float32 `protobuf:"fixed32,17,opt,name=batv,proto3" json:"batv,omitempty"`
	Ro1Status             int64   `protobuf:"varint,18,opt,name=ro1_status,proto3" json:"ro1_status,omitempty"`
	Ro2Status             int64   `protobuf:"varint,19,opt,name=ro2_status,proto3" json:"ro2_status,omitempty"`
	// temp_SOIL of the device.
	PhSoil float32 `protobuf:"fixed32,20,opt,name=ph_soil,proto3" json:"ph_soil,omitempty"`
	// conduct_SOIL of the device.
	Co2Ppm float32 `protobuf:"fixed32,21,opt,name=co2_ppm,proto3" json:"co2_ppm,omitempty"`
	// temp_SOIL of the device.
	TvocPpm            float32 `protobuf:"fixed32,22,opt,name=tvoc_ppm,proto3" json:"tvoc_ppm,omitempty"`
	SensecapLight      float32 `protobuf:"fixed32,23,opt,name=sensecap_light,proto3" json:"sensecap_light,omitempty"`
	BarometricPressure float32 `protobuf:"fixed32,24,opt,name=barometric_pressure,proto3" json:"barometric_pressure,omitempty"`
	Power              float32 `protobuf:"fixed32,25,opt,name=power,proto3" json:"power,omitempty"`
	Current            float32 `protobuf:"fixed32,26,opt,name=current,proto3" json:"current,omitempty"`
	Voltage            float32 `protobuf:"fixed32,27,opt,name=voltage,proto3" json:"voltage,omitempty"`
	Factor             float32 `protobuf:"fixed32,28,opt,name=factor,proto3" json:"factor,omitempty"`
	PowerSum           float32 `protobuf:"fixed32,29,opt,name=power_sum,json=powerSum,proto3" json:"power_sum,omitempty"`
	Status             int64   `protobuf:"varint,30,opt,name=status,proto3" json:"status,omitempty"`
	PowerConsumption   int64   `protobuf:"varint,31,opt,name=power_consumption,proto3" json:"power_consumption,omitempty"`
	Switch1            int64   `protobuf:"varint,32,opt,name=switch1,proto3" json:"switch1,omitempty"`
	Switch2            int64   `protobuf:"varint,33,opt,name=switch2,proto3" json:"switch2,omitempty"`
	Switch3            int64   `protobuf:"varint,34,opt,name=switch3,proto3" json:"switch3,omitempty"`
	Switch4            int64   `protobuf:"varint,35,opt,name=switch4,proto3" json:"switch4,omitempty"`
	Switch5            int64   `protobuf:"varint,36,opt,name=switch5,proto3" json:"switch5,omitempty"`
	Switch6            int64   `protobuf:"varint,37,opt,name=switch6,proto3" json:"switch6,omitempty"`
	Switch7            int64   `protobuf:"varint,38,opt,name=switch7,proto3" json:"switch7,omitempty"`
	Switch8            int64   `protobuf:"varint,39,opt,name=switch8,proto3" json:"switch8,omitempty"`
	Adc_1              string  `protobuf:"bytes,40,opt,name=adc_1,proto3" json:"adc_1,omitempty"`
	Adc_2              string  `protobuf:"bytes,41,opt,name=adc_2,proto3" json:"adc_2,omitempty"`
	Adv_1              string  `protobuf:"bytes,42,opt,name=adv_1,proto3" json:"adv_1,omitempty"`
	GpioIn_1           string  `protobuf:"bytes,43,opt,name=gpio_in_1,proto3" json:"gpio_in_1,omitempty"`
	GpioIn_2           string  `protobuf:"bytes,44,opt,name=gpio_in_2,proto3" json:"gpio_in_2,omitempty"`
	GpioIn_3           string  `protobuf:"bytes,45,opt,name=gpio_in_3,proto3" json:"gpio_in_3,omitempty"`
	GpioIn_4           string  `protobuf:"bytes,46,opt,name=gpio_in_4,proto3" json:"gpio_in_4,omitempty"`
	GpioOut_1          string  `protobuf:"bytes,47,opt,name=gpio_out_1,proto3" json:"gpio_out_1,omitempty"`
	GpioOut_2          string  `protobuf:"bytes,48,opt,name=gpio_out_2,proto3" json:"gpio_out_2,omitempty"`
	Distance           int64   `protobuf:"varint,49,opt,name=distance,proto3" json:"distance,omitempty"`
	Position           string  `protobuf:"bytes,50,opt,name=position,proto3" json:"position,omitempty"`
	Temperature1       float32 `protobuf:"fixed32,51,opt,name=temperature1,proto3" json:"temperature1,omitempty"`
	Temperature2       float32 `protobuf:"fixed32,52,opt,name=temperature2,proto3" json:"temperature2,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ZoneData) Reset() {
	*x = ZoneData{}
	mi := &file_api_zone_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneData) ProtoMessage() {}

func (x *ZoneData) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneData.ProtoReflect.Descriptor instead.
func (*ZoneData) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{2}
}

func (x *ZoneData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ZoneData) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *ZoneData) GetDeviceTypeId() int64 {
	if x != nil {
		return x.DeviceTypeId
	}
	return 0
}

func (x *ZoneData) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *ZoneData) GetAirTemperature() float32 {
	if x != nil {
		return x.AirTemperature
	}
	return 0
}

func (x *ZoneData) GetAirHumidity() float32 {
	if x != nil {
		return x.AirHumidity
	}
	return 0
}

func (x *ZoneData) GetSolTemperature() float32 {
	if x != nil {
		return x.SolTemperature
	}
	return 0
}

func (x *ZoneData) GetSolWater() float32 {
	if x != nil {
		return x.SolWater
	}
	return 0
}

func (x *ZoneData) GetSolConductSoil() float32 {
	if x != nil {
		return x.SolConductSoil
	}
	return 0
}

func (x *ZoneData) GetSubmissionDate() string {
	if x != nil {
		return x.SubmissionDate
	}
	return ""
}

func (x *ZoneData) GetWaterLeakStatus() int64 {
	if x != nil {
		return x.WaterLeakStatus
	}
	return 0
}

func (x *ZoneData) GetWaterLeakTimes() int64 {
	if x != nil {
		return x.WaterLeakTimes
	}
	return 0
}

func (x *ZoneData) GetLastWaterLeakDuration() int64 {
	if x != nil {
		return x.LastWaterLeakDuration
	}
	return 0
}

func (x *ZoneData) GetDoorOpenStatus() int64 {
	if x != nil {
		return x.DoorOpenStatus
	}
	return 0
}

func (x *ZoneData) GetDoorOpenTimes() int64 {
	if x != nil {
		return x.DoorOpenTimes
	}
	return 0
}

func (x *ZoneData) GetLastDoorOpenDuration() int64 {
	if x != nil {
		return x.LastDoorOpenDuration
	}
	return 0
}

func (x *ZoneData) GetBatv() float32 {
	if x != nil {
		return x.Batv
	}
	return 0
}

func (x *ZoneData) GetRo1Status() int64 {
	if x != nil {
		return x.Ro1Status
	}
	return 0
}

func (x *ZoneData) GetRo2Status() int64 {
	if x != nil {
		return x.Ro2Status
	}
	return 0
}

func (x *ZoneData) GetPhSoil() float32 {
	if x != nil {
		return x.PhSoil
	}
	return 0
}

func (x *ZoneData) GetCo2Ppm() float32 {
	if x != nil {
		return x.Co2Ppm
	}
	return 0
}

func (x *ZoneData) GetTvocPpm() float32 {
	if x != nil {
		return x.TvocPpm
	}
	return 0
}

func (x *ZoneData) GetSensecapLight() float32 {
	if x != nil {
		return x.SensecapLight
	}
	return 0
}

func (x *ZoneData) GetBarometricPressure() float32 {
	if x != nil {
		return x.BarometricPressure
	}
	return 0
}

func (x *ZoneData) GetPower() float32 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *ZoneData) GetCurrent() float32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ZoneData) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *ZoneData) GetFactor() float32 {
	if x != nil {
		return x.Factor
	}
	return 0
}

func (x *ZoneData) GetPowerSum() float32 {
	if x != nil {
		return x.PowerSum
	}
	return 0
}

func (x *ZoneData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ZoneData) GetPowerConsumption() int64 {
	if x != nil {
		return x.PowerConsumption
	}
	return 0
}

func (x *ZoneData) GetSwitch1() int64 {
	if x != nil {
		return x.Switch1
	}
	return 0
}

func (x *ZoneData) GetSwitch2() int64 {
	if x != nil {
		return x.Switch2
	}
	return 0
}

func (x *ZoneData) GetSwitch3() int64 {
	if x != nil {
		return x.Switch3
	}
	return 0
}

func (x *ZoneData) GetSwitch4() int64 {
	if x != nil {
		return x.Switch4
	}
	return 0
}

func (x *ZoneData) GetSwitch5() int64 {
	if x != nil {
		return x.Switch5
	}
	return 0
}

func (x *ZoneData) GetSwitch6() int64 {
	if x != nil {
		return x.Switch6
	}
	return 0
}

func (x *ZoneData) GetSwitch7() int64 {
	if x != nil {
		return x.Switch7
	}
	return 0
}

func (x *ZoneData) GetSwitch8() int64 {
	if x != nil {
		return x.Switch8
	}
	return 0
}

func (x *ZoneData) GetAdc_1() string {
	if x != nil {
		return x.Adc_1
	}
	return ""
}

func (x *ZoneData) GetAdc_2() string {
	if x != nil {
		return x.Adc_2
	}
	return ""
}

func (x *ZoneData) GetAdv_1() string {
	if x != nil {
		return x.Adv_1
	}
	return ""
}

func (x *ZoneData) GetGpioIn_1() string {
	if x != nil {
		return x.GpioIn_1
	}
	return ""
}

func (x *ZoneData) GetGpioIn_2() string {
	if x != nil {
		return x.GpioIn_2
	}
	return ""
}

func (x *ZoneData) GetGpioIn_3() string {
	if x != nil {
		return x.GpioIn_3
	}
	return ""
}

func (x *ZoneData) GetGpioIn_4() string {
	if x != nil {
		return x.GpioIn_4
	}
	return ""
}

func (x *ZoneData) GetGpioOut_1() string {
	if x != nil {
		return x.GpioOut_1
	}
	return ""
}

func (x *ZoneData) GetGpioOut_2() string {
	if x != nil {
		return x.GpioOut_2
	}
	return ""
}

func (x *ZoneData) GetDistance() int64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *ZoneData) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *ZoneData) GetTemperature1() float32 {
	if x != nil {
		return x.Temperature1
	}
	return 0
}

func (x *ZoneData) GetTemperature2() float32 {
	if x != nil {
		return x.Temperature2
	}
	return 0
}

type Zone struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Zone ID
	ZoneId int64 `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// Name of Zone
	ZoneName string `protobuf:"bytes,2,opt,name=zone_name,json=zoneName,proto3" json:"zone_name,omitempty"`
	// Organization ID
	OrgId string `protobuf:"bytes,3,opt,name=org_id,json=orgID,proto3" json:"org_id,omitempty"`
	// Order index of zone
	Order int64 `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	// Devices
	Devices       []string `protobuf:"bytes,5,rep,name=devices,proto3" json:"devices,omitempty"`
	ContentType   int64    `protobuf:"varint,6,opt,name=contentType,proto3" json:"contentType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Zone) Reset() {
	*x = Zone{}
	mi := &file_api_zone_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Zone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zone) ProtoMessage() {}

func (x *Zone) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zone.ProtoReflect.Descriptor instead.
func (*Zone) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{3}
}

func (x *Zone) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *Zone) GetZoneName() string {
	if x != nil {
		return x.ZoneName
	}
	return ""
}

func (x *Zone) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *Zone) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *Zone) GetDevices() []string {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *Zone) GetContentType() int64 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

type GetZonesItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Zone ID
	ZoneId int64 `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// Name of Zone
	ZoneName string `protobuf:"bytes,2,opt,name=zone_name,json=zoneName,proto3" json:"zone_name,omitempty"`
	// Organization ID
	OrgId string `protobuf:"bytes,3,opt,name=org_id,json=orgID,proto3" json:"org_id,omitempty"`
	// Order index of zone
	Order int64 `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	// Devices
	Devices       []*ZoneDevice `protobuf:"bytes,5,rep,name=devices,proto3" json:"devices,omitempty"`
	ContentType   int64         `protobuf:"varint,6,opt,name=contentType,proto3" json:"contentType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetZonesItem) Reset() {
	*x = GetZonesItem{}
	mi := &file_api_zone_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetZonesItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZonesItem) ProtoMessage() {}

func (x *GetZonesItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZonesItem.ProtoReflect.Descriptor instead.
func (*GetZonesItem) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{4}
}

func (x *GetZonesItem) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *GetZonesItem) GetZoneName() string {
	if x != nil {
		return x.ZoneName
	}
	return ""
}

func (x *GetZonesItem) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetZonesItem) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *GetZonesItem) GetDevices() []*ZoneDevice {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *GetZonesItem) GetContentType() int64 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

type CreateZoneRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Zone object to create
	Zone          *Zone `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateZoneRequest) Reset() {
	*x = CreateZoneRequest{}
	mi := &file_api_zone_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateZoneRequest) ProtoMessage() {}

func (x *CreateZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateZoneRequest.ProtoReflect.Descriptor instead.
func (*CreateZoneRequest) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{5}
}

func (x *CreateZoneRequest) GetZone() *Zone {
	if x != nil {
		return x.Zone
	}
	return nil
}

type GetZoneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Zone          *Zone                  `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetZoneResponse) Reset() {
	*x = GetZoneResponse{}
	mi := &file_api_zone_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZoneResponse) ProtoMessage() {}

func (x *GetZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZoneResponse.ProtoReflect.Descriptor instead.
func (*GetZoneResponse) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{6}
}

func (x *GetZoneResponse) GetZone() *Zone {
	if x != nil {
		return x.Zone
	}
	return nil
}

type GetZoneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ZoneId        int64                  `protobuf:"varint,1,opt,name=zone_id,json=zoneID,proto3" json:"zone_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetZoneRequest) Reset() {
	*x = GetZoneRequest{}
	mi := &file_api_zone_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZoneRequest) ProtoMessage() {}

func (x *GetZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZoneRequest.ProtoReflect.Descriptor instead.
func (*GetZoneRequest) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{7}
}

func (x *GetZoneRequest) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type ListZoneRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Max number of devices to return in the result-set.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset         int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	OrganizationId string `protobuf:"bytes,3,opt,name=organization_id,json=orgId,proto3" json:"organization_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListZoneRequest) Reset() {
	*x = ListZoneRequest{}
	mi := &file_api_zone_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListZoneRequest) ProtoMessage() {}

func (x *ListZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListZoneRequest.ProtoReflect.Descriptor instead.
func (*ListZoneRequest) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{8}
}

func (x *ListZoneRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListZoneRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListZoneRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type ListZoneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Zones         []*GetZonesItem        `protobuf:"bytes,1,rep,name=zones,proto3" json:"zones,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListZoneResponse) Reset() {
	*x = ListZoneResponse{}
	mi := &file_api_zone_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListZoneResponse) ProtoMessage() {}

func (x *ListZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListZoneResponse.ProtoReflect.Descriptor instead.
func (*ListZoneResponse) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{9}
}

func (x *ListZoneResponse) GetZones() []*GetZonesItem {
	if x != nil {
		return x.Zones
	}
	return nil
}

type DeleteZoneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ZoneId        int64                  `protobuf:"varint,1,opt,name=zone_id,json=zoneID,proto3" json:"zone_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteZoneRequest) Reset() {
	*x = DeleteZoneRequest{}
	mi := &file_api_zone_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteZoneRequest) ProtoMessage() {}

func (x *DeleteZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteZoneRequest.ProtoReflect.Descriptor instead.
func (*DeleteZoneRequest) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteZoneRequest) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type UpdateZoneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Zone          *Zone                  `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
	ZoneId        int64                  `protobuf:"varint,2,opt,name=zone_id,json=zoneID,proto3" json:"zone_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateZoneRequest) Reset() {
	*x = UpdateZoneRequest{}
	mi := &file_api_zone_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateZoneRequest) ProtoMessage() {}

func (x *UpdateZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateZoneRequest.ProtoReflect.Descriptor instead.
func (*UpdateZoneRequest) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateZoneRequest) GetZone() *Zone {
	if x != nil {
		return x.Zone
	}
	return nil
}

func (x *UpdateZoneRequest) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type AddUserToZoneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ZoneId        int64                  `protobuf:"varint,1,opt,name=zone_id,json=zoneID,proto3" json:"zone_id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userID,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddUserToZoneRequest) Reset() {
	*x = AddUserToZoneRequest{}
	mi := &file_api_zone_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserToZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserToZoneRequest) ProtoMessage() {}

func (x *AddUserToZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserToZoneRequest.ProtoReflect.Descriptor instead.
func (*AddUserToZoneRequest) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{12}
}

func (x *AddUserToZoneRequest) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *AddUserToZoneRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type AddUserToZoneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserName      string                 `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ZoneList      []int64                `protobuf:"varint,2,rep,packed,name=zone_list,json=zoneList,proto3" json:"zone_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddUserToZoneResponse) Reset() {
	*x = AddUserToZoneResponse{}
	mi := &file_api_zone_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserToZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserToZoneResponse) ProtoMessage() {}

func (x *AddUserToZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserToZoneResponse.ProtoReflect.Descriptor instead.
func (*AddUserToZoneResponse) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{13}
}

func (x *AddUserToZoneResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AddUserToZoneResponse) GetZoneList() []int64 {
	if x != nil {
		return x.ZoneList
	}
	return nil
}

type ZonesOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ZoneOrder     []*ZoneOrder           `protobuf:"bytes,1,rep,name=zoneOrder,json=zonesOrder,proto3" json:"zoneOrder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZonesOrderRequest) Reset() {
	*x = ZonesOrderRequest{}
	mi := &file_api_zone_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZonesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZonesOrderRequest) ProtoMessage() {}

func (x *ZonesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZonesOrderRequest.ProtoReflect.Descriptor instead.
func (*ZonesOrderRequest) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{14}
}

func (x *ZonesOrderRequest) GetZoneOrder() []*ZoneOrder {
	if x != nil {
		return x.ZoneOrder
	}
	return nil
}

type ZoneOrder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ZoneId        int64                  `protobuf:"varint,1,opt,name=zone_id,json=zoneID,proto3" json:"zone_id,omitempty"`
	ZoneOrder     int64                  `protobuf:"varint,2,opt,name=zone_order,json=zoneOrder,proto3" json:"zone_order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoneOrder) Reset() {
	*x = ZoneOrder{}
	mi := &file_api_zone_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneOrder) ProtoMessage() {}

func (x *ZoneOrder) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneOrder.ProtoReflect.Descriptor instead.
func (*ZoneOrder) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{15}
}

func (x *ZoneOrder) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *ZoneOrder) GetZoneOrder() int64 {
	if x != nil {
		return x.ZoneOrder
	}
	return 0
}

type ZonesOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ZoneOrder     []*ZoneOrder           `protobuf:"bytes,1,rep,name=zoneOrder,json=zonesOrder,proto3" json:"zoneOrder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZonesOrderResponse) Reset() {
	*x = ZonesOrderResponse{}
	mi := &file_api_zone_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZonesOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZonesOrderResponse) ProtoMessage() {}

func (x *ZonesOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZonesOrderResponse.ProtoReflect.Descriptor instead.
func (*ZonesOrderResponse) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{16}
}

func (x *ZonesOrderResponse) GetZoneOrder() []*ZoneOrder {
	if x != nil {
		return x.ZoneOrder
	}
	return nil
}

var File_api_zone_proto protoreflect.FileDescriptor

const file_api_zone_proto_rawDesc = "" +
	"\n" +
	"\x0eapi/zone.proto\x12\x03api\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xe5\x04\n" +
	"\n" +
	"ZoneDevice\x12&\n" +
	"\x0edevice_dev_eui\x18\x01 \x01(\tR\x0edevice_dev_eui\x12 \n" +
	"\vdevice_name\x18\x05 \x01(\tR\vdevice_name\x12.\n" +
	"\x12device_description\x18\x06 \x01(\tR\x12device_description\x12!\n" +
	"\x04data\x18\f \x03(\v2\r.api.ZoneDataR\x04data\x12H\n" +
	"\x13device_profile_name\x18\r \x03(\v2\x16.api.ZoneDeviceProfileR\x13device_profile_name\x12 \n" +
	"\vdevice_type\x18\x0e \x01(\x03R\vdevice_type\x127\n" +
	"\x17temperature_calibration\x18\x0f \x01(\x01R\x16temperatureCalibration\x121\n" +
	"\x14humadity_calibration\x18\x10 \x01(\x01R\x13humadityCalibration\x12<\n" +
	"\tvariables\x18\x11 \x03(\v2\x1e.api.ZoneDevice.VariablesEntryR\tvariables\x12-\n" +
	"\x04tags\x18\x12 \x03(\v2\x19.api.ZoneDevice.TagsEntryR\x04tags\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"'\n" +
	"\x11ZoneDeviceProfile\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\x93\r\n" +
	"\bZoneData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x18\n" +
	"\adev_eui\x18\x02 \x01(\tR\adev_eui\x12&\n" +
	"\x0edevice_type_id\x18\x03 \x01(\x03R\x0edevice_type_id\x12\x16\n" +
	"\x06org_id\x18\x04 \x01(\tR\x06org_id\x12(\n" +
	"\x0fair_temperature\x18\x05 \x01(\x02R\x0fair_temperature\x12\"\n" +
	"\fair_humidity\x18\x06 \x01(\x02R\fair_humidity\x12(\n" +
	"\x0fsol_temperature\x18\a \x01(\x02R\x0fsol_temperature\x12\x1c\n" +
	"\tsol_water\x18\b \x01(\x02R\tsol_water\x12*\n" +
	"\x10sol_conduct_soil\x18\t \x01(\x02R\x10sol_conduct_soil\x12(\n" +
	"\x0fsubmission_date\x18\n" +
	" \x01(\tR\x0fsubmission_date\x12,\n" +
	"\x11water_leak_status\x18\v \x01(\x03R\x11water_leak_status\x12*\n" +
	"\x10water_leak_times\x18\f \x01(\x03R\x10water_leak_times\x12:\n" +
	"\x18last_water_leak_duration\x18\r \x01(\x03R\x18last_water_leak_duration\x12*\n" +
	"\x10door_open_status\x18\x0e \x01(\x03R\x10door_open_status\x12(\n" +
	"\x0fdoor_open_times\x18\x0f \x01(\x03R\x0fdoor_open_times\x128\n" +
	"\x17last_door_open_duration\x18\x10 \x01(\x03R\x17last_door_open_duration\x12\x12\n" +
	"\x04batv\x18\x11 \x01(\x02R\x04batv\x12\x1e\n" +
	"\n" +
	"ro1_status\x18\x12 \x01(\x03R\n" +
	"ro1_status\x12\x1e\n" +
	"\n" +
	"ro2_status\x18\x13 \x01(\x03R\n" +
	"ro2_status\x12\x18\n" +
	"\aph_soil\x18\x14 \x01(\x02R\aph_soil\x12\x18\n" +
	"\aco2_ppm\x18\x15 \x01(\x02R\aco2_ppm\x12\x1a\n" +
	"\btvoc_ppm\x18\x16 \x01(\x02R\btvoc_ppm\x12&\n" +
	"\x0esensecap_light\x18\x17 \x01(\x02R\x0esensecap_light\x120\n" +
	"\x13barometric_pressure\x18\x18 \x01(\x02R\x13barometric_pressure\x12\x14\n" +
	"\x05power\x18\x19 \x01(\x02R\x05power\x12\x18\n" +
	"\acurrent\x18\x1a \x01(\x02R\acurrent\x12\x18\n" +
	"\avoltage\x18\x1b \x01(\x02R\avoltage\x12\x16\n" +
	"\x06factor\x18\x1c \x01(\x02R\x06factor\x12\x1b\n" +
	"\tpower_sum\x18\x1d \x01(\x02R\bpowerSum\x12\x16\n" +
	"\x06status\x18\x1e \x01(\x03R\x06status\x12,\n" +
	"\x11power_consumption\x18\x1f \x01(\x03R\x11power_consumption\x12\x18\n" +
	"\aswitch1\x18  \x01(\x03R\aswitch1\x12\x18\n" +
	"\aswitch2\x18! \x01(\x03R\aswitch2\x12\x18\n" +
	"\aswitch3\x18\" \x01(\x03R\aswitch3\x12\x18\n" +
	"\aswitch4\x18# \x01(\x03R\aswitch4\x12\x18\n" +
	"\aswitch5\x18$ \x01(\x03R\aswitch5\x12\x18\n" +
	"\aswitch6\x18% \x01(\x03R\aswitch6\x12\x18\n" +
	"\aswitch7\x18& \x01(\x03R\aswitch7\x12\x18\n" +
	"\aswitch8\x18' \x01(\x03R\aswitch8\x12\x14\n" +
	"\x05adc_1\x18( \x01(\tR\x05adc_1\x12\x14\n" +
	"\x05adc_2\x18) \x01(\tR\x05adc_2\x12\x14\n" +
	"\x05adv_1\x18* \x01(\tR\x05adv_1\x12\x1c\n" +
	"\tgpio_in_1\x18+ \x01(\tR\tgpio_in_1\x12\x1c\n" +
	"\tgpio_in_2\x18, \x01(\tR\tgpio_in_2\x12\x1c\n" +
	"\tgpio_in_3\x18- \x01(\tR\tgpio_in_3\x12\x1c\n" +
	"\tgpio_in_4\x18. \x01(\tR\tgpio_in_4\x12\x1e\n" +
	"\n" +
	"gpio_out_1\x18/ \x01(\tR\n" +
	"gpio_out_1\x12\x1e\n" +
	"\n" +
	"gpio_out_2\x180 \x01(\tR\n" +
	"gpio_out_2\x12\x1a\n" +
	"\bdistance\x181 \x01(\x03R\bdistance\x12\x1a\n" +
	"\bposition\x182 \x01(\tR\bposition\x12\"\n" +
	"\ftemperature1\x183 \x01(\x02R\ftemperature1\x12\"\n" +
	"\ftemperature2\x184 \x01(\x02R\ftemperature2\"\xa5\x01\n" +
	"\x04Zone\x12\x17\n" +
	"\azone_id\x18\x01 \x01(\x03R\x06zoneId\x12\x1b\n" +
	"\tzone_name\x18\x02 \x01(\tR\bzoneName\x12\x15\n" +
	"\x06org_id\x18\x03 \x01(\tR\x05orgID\x12\x14\n" +
	"\x05order\x18\x04 \x01(\x03R\x05order\x12\x18\n" +
	"\adevices\x18\x05 \x03(\tR\adevices\x12 \n" +
	"\vcontentType\x18\x06 \x01(\x03R\vcontentType\"\xbe\x01\n" +
	"\fGetZonesItem\x12\x17\n" +
	"\azone_id\x18\x01 \x01(\x03R\x06zoneId\x12\x1b\n" +
	"\tzone_name\x18\x02 \x01(\tR\bzoneName\x12\x15\n" +
	"\x06org_id\x18\x03 \x01(\tR\x05orgID\x12\x14\n" +
	"\x05order\x18\x04 \x01(\x03R\x05order\x12)\n" +
	"\adevices\x18\x05 \x03(\v2\x0f.api.ZoneDeviceR\adevices\x12 \n" +
	"\vcontentType\x18\x06 \x01(\x03R\vcontentType\"2\n" +
	"\x11CreateZoneRequest\x12\x1d\n" +
	"\x04zone\x18\x01 \x01(\v2\t.api.ZoneR\x04zone\"0\n" +
	"\x0fGetZoneResponse\x12\x1d\n" +
	"\x04zone\x18\x01 \x01(\v2\t.api.ZoneR\x04zone\")\n" +
	"\x0eGetZoneRequest\x12\x17\n" +
	"\azone_id\x18\x01 \x01(\x03R\x06zoneID\"_\n" +
	"\x0fListZoneRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12\x1e\n" +
	"\x0forganization_id\x18\x03 \x01(\tR\x05orgId\";\n" +
	"\x10ListZoneResponse\x12'\n" +
	"\x05zones\x18\x01 \x03(\v2\x11.api.GetZonesItemR\x05zones\",\n" +
	"\x11DeleteZoneRequest\x12\x17\n" +
	"\azone_id\x18\x01 \x01(\x03R\x06zoneID\"K\n" +
	"\x11UpdateZoneRequest\x12\x1d\n" +
	"\x04zone\x18\x01 \x01(\v2\t.api.ZoneR\x04zone\x12\x17\n" +
	"\azone_id\x18\x02 \x01(\x03R\x06zoneID\"H\n" +
	"\x14AddUserToZoneRequest\x12\x17\n" +
	"\azone_id\x18\x01 \x01(\x03R\x06zoneID\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userID\"Q\n" +
	"\x15AddUserToZoneResponse\x12\x1b\n" +
	"\tuser_name\x18\x01 \x01(\tR\buserName\x12\x1b\n" +
	"\tzone_list\x18\x02 \x03(\x03R\bzoneList\"B\n" +
	"\x11ZonesOrderRequest\x12-\n" +
	"\tzoneOrder\x18\x01 \x03(\v2\x0e.api.ZoneOrderR\n" +
	"zonesOrder\"C\n" +
	"\tZoneOrder\x12\x17\n" +
	"\azone_id\x18\x01 \x01(\x03R\x06zoneID\x12\x1d\n" +
	"\n" +
	"zone_order\x18\x02 \x01(\x03R\tzoneOrder\"C\n" +
	"\x12ZonesOrderResponse\x12-\n" +
	"\tzoneOrder\x18\x01 \x03(\v2\x0e.api.ZoneOrderR\n" +
	"zonesOrder2\xa6\x03\n" +
	"\vZoneService\x12M\n" +
	"\x06Create\x12\x16.api.CreateZoneRequest\x1a\x14.api.GetZoneResponse\"\x15\x82\xd3\xe4\x93\x02\x0f:\x01*\"\n" +
	"/api/zones\x12N\n" +
	"\x03Get\x12\x13.api.GetZoneRequest\x1a\x14.api.GetZoneResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/api/zones/{zone_id}\x12G\n" +
	"\x04List\x12\x14.api.ListZoneRequest\x1a\x15.api.ListZoneResponse\"\x12\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/api/zones\x12V\n" +
	"\x06Delete\x12\x16.api.DeleteZoneRequest\x1a\x16.google.protobuf.Empty\"\x1c\x82\xd3\xe4\x93\x02\x16*\x14/api/zones/{zone_id}\x12W\n" +
	"\x06Update\x12\x16.api.UpdateZoneRequest\x1a\x14.api.GetZoneResponse\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\x1a\x14/api/zones/{zone_id}B\x8f\x01\n" +
	"\x11io.chirpstack.apiB\tZoneProtoP\x01Z.github.com/ibrahimozekici/VapsV4/api/go/v4/api\xaa\x02\x0eChirpstack.Api\xca\x02\x0eChirpstack\\Api\xe2\x02\x1aGPBMetadata\\Chirpstack\\Apib\x06proto3"

var (
	file_api_zone_proto_rawDescOnce sync.Once
	file_api_zone_proto_rawDescData []byte
)

func file_api_zone_proto_rawDescGZIP() []byte {
	file_api_zone_proto_rawDescOnce.Do(func() {
		file_api_zone_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_zone_proto_rawDesc), len(file_api_zone_proto_rawDesc)))
	})
	return file_api_zone_proto_rawDescData
}

var file_api_zone_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_api_zone_proto_goTypes = []any{
	(*ZoneDevice)(nil),            // 0: api.ZoneDevice
	(*ZoneDeviceProfile)(nil),     // 1: api.ZoneDeviceProfile
	(*ZoneData)(nil),              // 2: api.ZoneData
	(*Zone)(nil),                  // 3: api.Zone
	(*GetZonesItem)(nil),          // 4: api.GetZonesItem
	(*CreateZoneRequest)(nil),     // 5: api.CreateZoneRequest
	(*GetZoneResponse)(nil),       // 6: api.GetZoneResponse
	(*GetZoneRequest)(nil),        // 7: api.GetZoneRequest
	(*ListZoneRequest)(nil),       // 8: api.ListZoneRequest
	(*ListZoneResponse)(nil),      // 9: api.ListZoneResponse
	(*DeleteZoneRequest)(nil),     // 10: api.DeleteZoneRequest
	(*UpdateZoneRequest)(nil),     // 11: api.UpdateZoneRequest
	(*AddUserToZoneRequest)(nil),  // 12: api.AddUserToZoneRequest
	(*AddUserToZoneResponse)(nil), // 13: api.AddUserToZoneResponse
	(*ZonesOrderRequest)(nil),     // 14: api.ZonesOrderRequest
	(*ZoneOrder)(nil),             // 15: api.ZoneOrder
	(*ZonesOrderResponse)(nil),    // 16: api.ZonesOrderResponse
	nil,                           // 17: api.ZoneDevice.VariablesEntry
	nil,                           // 18: api.ZoneDevice.TagsEntry
	(*emptypb.Empty)(nil),         // 19: google.protobuf.Empty
}
var file_api_zone_proto_depIdxs = []int32{
	2,  // 0: api.ZoneDevice.data:type_name -> api.ZoneData
	1,  // 1: api.ZoneDevice.device_profile_name:type_name -> api.ZoneDeviceProfile
	17, // 2: api.ZoneDevice.variables:type_name -> api.ZoneDevice.VariablesEntry
	18, // 3: api.ZoneDevice.tags:type_name -> api.ZoneDevice.TagsEntry
	0,  // 4: api.GetZonesItem.devices:type_name -> api.ZoneDevice
	3,  // 5: api.CreateZoneRequest.zone:type_name -> api.Zone
	3,  // 6: api.GetZoneResponse.zone:type_name -> api.Zone
	4,  // 7: api.ListZoneResponse.zones:type_name -> api.GetZonesItem
	3,  // 8: api.UpdateZoneRequest.zone:type_name -> api.Zone
	15, // 9: api.ZonesOrderRequest.zoneOrder:type_name -> api.ZoneOrder
	15, // 10: api.ZonesOrderResponse.zoneOrder:type_name -> api.ZoneOrder
	5,  // 11: api.ZoneService.Create:input_type -> api.CreateZoneRequest
	7,  // 12: api.ZoneService.Get:input_type -> api.GetZoneRequest
	8,  // 13: api.ZoneService.List:input_type -> api.ListZoneRequest
	10, // 14: api.ZoneService.Delete:input_type -> api.DeleteZoneRequest
	11, // 15: api.ZoneService.Update:input_type -> api.UpdateZoneRequest
	6,  // 16: api.ZoneService.Create:output_type -> api.GetZoneResponse
	6,  // 17: api.ZoneService.Get:output_type -> api.GetZoneResponse
	9,  // 18: api.ZoneService.List:output_type -> api.ListZoneResponse
	19, // 19: api.ZoneService.Delete:output_type -> google.protobuf.Empty
	6,  // 20: api.ZoneService.Update:output_type -> api.GetZoneResponse
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_zone_proto_init() }
func file_api_zone_proto_init() {
	if File_api_zone_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_zone_proto_rawDesc), len(file_api_zone_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_zone_proto_goTypes,
		DependencyIndexes: file_api_zone_proto_depIdxs,
		MessageInfos:      file_api_zone_proto_msgTypes,
	}.Build()
	File_api_zone_proto = out.File
	file_api_zone_proto_goTypes = nil
	file_api_zone_proto_depIdxs = nil
}
