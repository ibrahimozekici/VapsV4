// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.3
// source: api/zone.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ZoneDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Device EUI (HEX encoded).
	DeviceDevEui string `protobuf:"bytes,1,opt,name=device_dev_eui,proto3" json:"device_dev_eui,omitempty"`
	// Device-profile ID attached to the device.
	DeviceProfileId string `protobuf:"bytes,4,opt,name=device_profile_id,proto3" json:"device_profile_id,omitempty"`
	// Name of the device.
	DeviceName string `protobuf:"bytes,5,opt,name=device_name,proto3" json:"device_name,omitempty"`
	// Description of the device.
	DeviceDescription string `protobuf:"bytes,6,opt,name=device_description,proto3" json:"device_description,omitempty"`
	// device_last_seen_at
	DeviceLastSeenAt string `protobuf:"bytes,7,opt,name=device_last_seen_at,proto3" json:"device_last_seen_at,omitempty"`
	// device landing alarms
	Data                   []*ZoneData          `protobuf:"bytes,12,rep,name=data,proto3" json:"data,omitempty"`
	DeviceProfileName      []*ZoneDeviceProfile `protobuf:"bytes,13,rep,name=device_profile_name,proto3" json:"device_profile_name,omitempty"`
	DeviceType             int64                `protobuf:"varint,14,opt,name=device_type,proto3" json:"device_type,omitempty"`
	TemperatureCalibration float64              `protobuf:"fixed64,15,opt,name=temperature_calibration,json=temperatureCalibration,proto3" json:"temperature_calibration,omitempty"`
	HumadityCalibration    float64              `protobuf:"fixed64,16,opt,name=humadity_calibration,json=humadityCalibration,proto3" json:"humadity_calibration,omitempty"`
	// New field for custom attributes
	// Variables (user defined).
	// These variables can be used together with integrations to store tokens /
	// secrets that must be configured per device. These variables are not
	// exposed in the event payloads.
	Variables map[string]string `protobuf:"bytes,17,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Tags to filter on.
	Tags map[string]string `protobuf:"bytes,18,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ZoneDevice) Reset() {
	*x = ZoneDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneDevice) ProtoMessage() {}

func (x *ZoneDevice) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneDevice.ProtoReflect.Descriptor instead.
func (*ZoneDevice) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{0}
}

func (x *ZoneDevice) GetDeviceDevEui() string {
	if x != nil {
		return x.DeviceDevEui
	}
	return ""
}

func (x *ZoneDevice) GetDeviceProfileId() string {
	if x != nil {
		return x.DeviceProfileId
	}
	return ""
}

func (x *ZoneDevice) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *ZoneDevice) GetDeviceDescription() string {
	if x != nil {
		return x.DeviceDescription
	}
	return ""
}

func (x *ZoneDevice) GetDeviceLastSeenAt() string {
	if x != nil {
		return x.DeviceLastSeenAt
	}
	return ""
}

func (x *ZoneDevice) GetData() []*ZoneData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ZoneDevice) GetDeviceProfileName() []*ZoneDeviceProfile {
	if x != nil {
		return x.DeviceProfileName
	}
	return nil
}

func (x *ZoneDevice) GetDeviceType() int64 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *ZoneDevice) GetTemperatureCalibration() float64 {
	if x != nil {
		return x.TemperatureCalibration
	}
	return 0
}

func (x *ZoneDevice) GetHumadityCalibration() float64 {
	if x != nil {
		return x.HumadityCalibration
	}
	return 0
}

func (x *ZoneDevice) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *ZoneDevice) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ZoneDeviceProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ZoneDeviceProfile) Reset() {
	*x = ZoneDeviceProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneDeviceProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneDeviceProfile) ProtoMessage() {}

func (x *ZoneDeviceProfile) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneDeviceProfile.ProtoReflect.Descriptor instead.
func (*ZoneDeviceProfile) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{1}
}

func (x *ZoneDeviceProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ZoneData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Device EUI (HEX encoded).
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// name
	DevEui string `protobuf:"bytes,2,opt,name=dev_eui,proto3" json:"dev_eui,omitempty"`
	// temp_SHT of the device.
	DeviceTypeId int64 `protobuf:"varint,3,opt,name=device_type_id,proto3" json:"device_type_id,omitempty"`
	// hum_SHT.
	OrgId string `protobuf:"bytes,4,opt,name=org_id,proto3" json:"org_id,omitempty"`
	// water_SOIL of the device.
	AirTemperature float32 `protobuf:"fixed32,5,opt,name=air_temperature,proto3" json:"air_temperature,omitempty"`
	// temp_SOIL of the device.
	AirHumidity float32 `protobuf:"fixed32,6,opt,name=air_humidity,proto3" json:"air_humidity,omitempty"`
	// conduct_SOIL of the device.
	SolTemperature float32 `protobuf:"fixed32,7,opt,name=sol_temperature,proto3" json:"sol_temperature,omitempty"`
	// water_SOIL of the device.
	SolWater float32 `protobuf:"fixed32,8,opt,name=sol_water,proto3" json:"sol_water,omitempty"`
	// temp_SOIL of the device.
	SolConductSoil float32 `protobuf:"fixed32,9,opt,name=sol_conduct_soil,proto3" json:"sol_conduct_soil,omitempty"`
	// The last time the application-server received any data from the device,
	// or an empty string when the device never sent any data.
	SubmissionDate        string  `protobuf:"bytes,10,opt,name=submission_date,proto3" json:"submission_date,omitempty"`
	WaterLeakStatus       int64   `protobuf:"varint,11,opt,name=water_leak_status,proto3" json:"water_leak_status,omitempty"`
	WaterLeakTimes        int64   `protobuf:"varint,12,opt,name=water_leak_times,proto3" json:"water_leak_times,omitempty"`
	LastWaterLeakDuration int64   `protobuf:"varint,13,opt,name=last_water_leak_duration,proto3" json:"last_water_leak_duration,omitempty"`
	DoorOpenStatus        int64   `protobuf:"varint,14,opt,name=door_open_status,proto3" json:"door_open_status,omitempty"`
	DoorOpenTimes         int64   `protobuf:"varint,15,opt,name=door_open_times,proto3" json:"door_open_times,omitempty"`
	LastDoorOpenDuration  int64   `protobuf:"varint,16,opt,name=last_door_open_duration,proto3" json:"last_door_open_duration,omitempty"`
	Batv                  float32 `protobuf:"fixed32,17,opt,name=batv,proto3" json:"batv,omitempty"`
	Ro1Status             int64   `protobuf:"varint,18,opt,name=ro1_status,proto3" json:"ro1_status,omitempty"`
	Ro2Status             int64   `protobuf:"varint,19,opt,name=ro2_status,proto3" json:"ro2_status,omitempty"`
	// temp_SOIL of the device.
	PhSoil float32 `protobuf:"fixed32,20,opt,name=ph_soil,proto3" json:"ph_soil,omitempty"`
	// conduct_SOIL of the device.
	Co2Ppm float32 `protobuf:"fixed32,21,opt,name=co2_ppm,proto3" json:"co2_ppm,omitempty"`
	// temp_SOIL of the device.
	TvocPpm            float32 `protobuf:"fixed32,22,opt,name=tvoc_ppm,proto3" json:"tvoc_ppm,omitempty"`
	SensecapLight      float32 `protobuf:"fixed32,23,opt,name=sensecap_light,proto3" json:"sensecap_light,omitempty"`
	BarometricPressure float32 `protobuf:"fixed32,24,opt,name=barometric_pressure,proto3" json:"barometric_pressure,omitempty"`
	Power              float32 `protobuf:"fixed32,25,opt,name=power,proto3" json:"power,omitempty"`
	Current            float32 `protobuf:"fixed32,26,opt,name=current,proto3" json:"current,omitempty"`
	Voltage            float32 `protobuf:"fixed32,27,opt,name=voltage,proto3" json:"voltage,omitempty"`
	Factor             float32 `protobuf:"fixed32,28,opt,name=factor,proto3" json:"factor,omitempty"`
	PowerSum           float32 `protobuf:"fixed32,29,opt,name=power_sum,json=powerSum,proto3" json:"power_sum,omitempty"`
	Status             int64   `protobuf:"varint,30,opt,name=status,proto3" json:"status,omitempty"`
	PowerConsumption   int64   `protobuf:"varint,31,opt,name=power_consumption,proto3" json:"power_consumption,omitempty"`
	Switch1            int64   `protobuf:"varint,32,opt,name=switch1,proto3" json:"switch1,omitempty"`
	Switch2            int64   `protobuf:"varint,33,opt,name=switch2,proto3" json:"switch2,omitempty"`
	Switch3            int64   `protobuf:"varint,34,opt,name=switch3,proto3" json:"switch3,omitempty"`
	Switch4            int64   `protobuf:"varint,35,opt,name=switch4,proto3" json:"switch4,omitempty"`
	Switch5            int64   `protobuf:"varint,36,opt,name=switch5,proto3" json:"switch5,omitempty"`
	Switch6            int64   `protobuf:"varint,37,opt,name=switch6,proto3" json:"switch6,omitempty"`
	Switch7            int64   `protobuf:"varint,38,opt,name=switch7,proto3" json:"switch7,omitempty"`
	Switch8            int64   `protobuf:"varint,39,opt,name=switch8,proto3" json:"switch8,omitempty"`
	Adc_1              string  `protobuf:"bytes,40,opt,name=adc_1,proto3" json:"adc_1,omitempty"`
	Adc_2              string  `protobuf:"bytes,41,opt,name=adc_2,proto3" json:"adc_2,omitempty"`
	Adv_1              string  `protobuf:"bytes,42,opt,name=adv_1,proto3" json:"adv_1,omitempty"`
	GpioIn_1           string  `protobuf:"bytes,43,opt,name=gpio_in_1,proto3" json:"gpio_in_1,omitempty"`
	GpioIn_2           string  `protobuf:"bytes,44,opt,name=gpio_in_2,proto3" json:"gpio_in_2,omitempty"`
	GpioIn_3           string  `protobuf:"bytes,45,opt,name=gpio_in_3,proto3" json:"gpio_in_3,omitempty"`
	GpioIn_4           string  `protobuf:"bytes,46,opt,name=gpio_in_4,proto3" json:"gpio_in_4,omitempty"`
	GpioOut_1          string  `protobuf:"bytes,47,opt,name=gpio_out_1,proto3" json:"gpio_out_1,omitempty"`
	GpioOut_2          string  `protobuf:"bytes,48,opt,name=gpio_out_2,proto3" json:"gpio_out_2,omitempty"`
	Distance           int64   `protobuf:"varint,49,opt,name=distance,proto3" json:"distance,omitempty"`
	Position           string  `protobuf:"bytes,50,opt,name=position,proto3" json:"position,omitempty"`
	Temperature1       float32 `protobuf:"fixed32,51,opt,name=temperature1,proto3" json:"temperature1,omitempty"`
	Temperature2       float32 `protobuf:"fixed32,52,opt,name=temperature2,proto3" json:"temperature2,omitempty"`
}

func (x *ZoneData) Reset() {
	*x = ZoneData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneData) ProtoMessage() {}

func (x *ZoneData) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneData.ProtoReflect.Descriptor instead.
func (*ZoneData) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{2}
}

func (x *ZoneData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ZoneData) GetDevEui() string {
	if x != nil {
		return x.DevEui
	}
	return ""
}

func (x *ZoneData) GetDeviceTypeId() int64 {
	if x != nil {
		return x.DeviceTypeId
	}
	return 0
}

func (x *ZoneData) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *ZoneData) GetAirTemperature() float32 {
	if x != nil {
		return x.AirTemperature
	}
	return 0
}

func (x *ZoneData) GetAirHumidity() float32 {
	if x != nil {
		return x.AirHumidity
	}
	return 0
}

func (x *ZoneData) GetSolTemperature() float32 {
	if x != nil {
		return x.SolTemperature
	}
	return 0
}

func (x *ZoneData) GetSolWater() float32 {
	if x != nil {
		return x.SolWater
	}
	return 0
}

func (x *ZoneData) GetSolConductSoil() float32 {
	if x != nil {
		return x.SolConductSoil
	}
	return 0
}

func (x *ZoneData) GetSubmissionDate() string {
	if x != nil {
		return x.SubmissionDate
	}
	return ""
}

func (x *ZoneData) GetWaterLeakStatus() int64 {
	if x != nil {
		return x.WaterLeakStatus
	}
	return 0
}

func (x *ZoneData) GetWaterLeakTimes() int64 {
	if x != nil {
		return x.WaterLeakTimes
	}
	return 0
}

func (x *ZoneData) GetLastWaterLeakDuration() int64 {
	if x != nil {
		return x.LastWaterLeakDuration
	}
	return 0
}

func (x *ZoneData) GetDoorOpenStatus() int64 {
	if x != nil {
		return x.DoorOpenStatus
	}
	return 0
}

func (x *ZoneData) GetDoorOpenTimes() int64 {
	if x != nil {
		return x.DoorOpenTimes
	}
	return 0
}

func (x *ZoneData) GetLastDoorOpenDuration() int64 {
	if x != nil {
		return x.LastDoorOpenDuration
	}
	return 0
}

func (x *ZoneData) GetBatv() float32 {
	if x != nil {
		return x.Batv
	}
	return 0
}

func (x *ZoneData) GetRo1Status() int64 {
	if x != nil {
		return x.Ro1Status
	}
	return 0
}

func (x *ZoneData) GetRo2Status() int64 {
	if x != nil {
		return x.Ro2Status
	}
	return 0
}

func (x *ZoneData) GetPhSoil() float32 {
	if x != nil {
		return x.PhSoil
	}
	return 0
}

func (x *ZoneData) GetCo2Ppm() float32 {
	if x != nil {
		return x.Co2Ppm
	}
	return 0
}

func (x *ZoneData) GetTvocPpm() float32 {
	if x != nil {
		return x.TvocPpm
	}
	return 0
}

func (x *ZoneData) GetSensecapLight() float32 {
	if x != nil {
		return x.SensecapLight
	}
	return 0
}

func (x *ZoneData) GetBarometricPressure() float32 {
	if x != nil {
		return x.BarometricPressure
	}
	return 0
}

func (x *ZoneData) GetPower() float32 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *ZoneData) GetCurrent() float32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ZoneData) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *ZoneData) GetFactor() float32 {
	if x != nil {
		return x.Factor
	}
	return 0
}

func (x *ZoneData) GetPowerSum() float32 {
	if x != nil {
		return x.PowerSum
	}
	return 0
}

func (x *ZoneData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ZoneData) GetPowerConsumption() int64 {
	if x != nil {
		return x.PowerConsumption
	}
	return 0
}

func (x *ZoneData) GetSwitch1() int64 {
	if x != nil {
		return x.Switch1
	}
	return 0
}

func (x *ZoneData) GetSwitch2() int64 {
	if x != nil {
		return x.Switch2
	}
	return 0
}

func (x *ZoneData) GetSwitch3() int64 {
	if x != nil {
		return x.Switch3
	}
	return 0
}

func (x *ZoneData) GetSwitch4() int64 {
	if x != nil {
		return x.Switch4
	}
	return 0
}

func (x *ZoneData) GetSwitch5() int64 {
	if x != nil {
		return x.Switch5
	}
	return 0
}

func (x *ZoneData) GetSwitch6() int64 {
	if x != nil {
		return x.Switch6
	}
	return 0
}

func (x *ZoneData) GetSwitch7() int64 {
	if x != nil {
		return x.Switch7
	}
	return 0
}

func (x *ZoneData) GetSwitch8() int64 {
	if x != nil {
		return x.Switch8
	}
	return 0
}

func (x *ZoneData) GetAdc_1() string {
	if x != nil {
		return x.Adc_1
	}
	return ""
}

func (x *ZoneData) GetAdc_2() string {
	if x != nil {
		return x.Adc_2
	}
	return ""
}

func (x *ZoneData) GetAdv_1() string {
	if x != nil {
		return x.Adv_1
	}
	return ""
}

func (x *ZoneData) GetGpioIn_1() string {
	if x != nil {
		return x.GpioIn_1
	}
	return ""
}

func (x *ZoneData) GetGpioIn_2() string {
	if x != nil {
		return x.GpioIn_2
	}
	return ""
}

func (x *ZoneData) GetGpioIn_3() string {
	if x != nil {
		return x.GpioIn_3
	}
	return ""
}

func (x *ZoneData) GetGpioIn_4() string {
	if x != nil {
		return x.GpioIn_4
	}
	return ""
}

func (x *ZoneData) GetGpioOut_1() string {
	if x != nil {
		return x.GpioOut_1
	}
	return ""
}

func (x *ZoneData) GetGpioOut_2() string {
	if x != nil {
		return x.GpioOut_2
	}
	return ""
}

func (x *ZoneData) GetDistance() int64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *ZoneData) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *ZoneData) GetTemperature1() float32 {
	if x != nil {
		return x.Temperature1
	}
	return 0
}

func (x *ZoneData) GetTemperature2() float32 {
	if x != nil {
		return x.Temperature2
	}
	return 0
}

type Zone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Zone ID
	ZoneId int64 `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// Name of Zone
	ZoneName string `protobuf:"bytes,2,opt,name=zone_name,json=zoneName,proto3" json:"zone_name,omitempty"`
	// Organization ID
	OrgId string `protobuf:"bytes,3,opt,name=org_id,json=orgID,proto3" json:"org_id,omitempty"`
	// Order index of zone
	Order int64 `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	// Devices
	Devices     []string `protobuf:"bytes,5,rep,name=devices,proto3" json:"devices,omitempty"`
	ContentType int64    `protobuf:"varint,6,opt,name=contentType,proto3" json:"contentType,omitempty"`
}

func (x *Zone) Reset() {
	*x = Zone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Zone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zone) ProtoMessage() {}

func (x *Zone) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zone.ProtoReflect.Descriptor instead.
func (*Zone) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{3}
}

func (x *Zone) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *Zone) GetZoneName() string {
	if x != nil {
		return x.ZoneName
	}
	return ""
}

func (x *Zone) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *Zone) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *Zone) GetDevices() []string {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *Zone) GetContentType() int64 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

type GetZonesItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Zone ID
	ZoneId int64 `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// Name of Zone
	ZoneName string `protobuf:"bytes,2,opt,name=zone_name,json=zoneName,proto3" json:"zone_name,omitempty"`
	// Organization ID
	OrgId string `protobuf:"bytes,3,opt,name=org_id,json=orgID,proto3" json:"org_id,omitempty"`
	// Order index of zone
	Order int64 `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	// Devices
	Devices     []*ZoneDevice `protobuf:"bytes,5,rep,name=devices,proto3" json:"devices,omitempty"`
	ContentType int64         `protobuf:"varint,6,opt,name=contentType,proto3" json:"contentType,omitempty"`
}

func (x *GetZonesItem) Reset() {
	*x = GetZonesItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetZonesItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZonesItem) ProtoMessage() {}

func (x *GetZonesItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZonesItem.ProtoReflect.Descriptor instead.
func (*GetZonesItem) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{4}
}

func (x *GetZonesItem) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *GetZonesItem) GetZoneName() string {
	if x != nil {
		return x.ZoneName
	}
	return ""
}

func (x *GetZonesItem) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetZonesItem) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *GetZonesItem) GetDevices() []*ZoneDevice {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *GetZonesItem) GetContentType() int64 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

type CreateZoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Zone object to create
	Zone *Zone `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
}

func (x *CreateZoneRequest) Reset() {
	*x = CreateZoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateZoneRequest) ProtoMessage() {}

func (x *CreateZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateZoneRequest.ProtoReflect.Descriptor instead.
func (*CreateZoneRequest) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{5}
}

func (x *CreateZoneRequest) GetZone() *Zone {
	if x != nil {
		return x.Zone
	}
	return nil
}

type GetZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zone *Zone `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
}

func (x *GetZoneResponse) Reset() {
	*x = GetZoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZoneResponse) ProtoMessage() {}

func (x *GetZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZoneResponse.ProtoReflect.Descriptor instead.
func (*GetZoneResponse) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{6}
}

func (x *GetZoneResponse) GetZone() *Zone {
	if x != nil {
		return x.Zone
	}
	return nil
}

type GetZoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId int64 `protobuf:"varint,1,opt,name=zone_id,json=zoneID,proto3" json:"zone_id,omitempty"`
}

func (x *GetZoneRequest) Reset() {
	*x = GetZoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZoneRequest) ProtoMessage() {}

func (x *GetZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZoneRequest.ProtoReflect.Descriptor instead.
func (*GetZoneRequest) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{7}
}

func (x *GetZoneRequest) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type ListZoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Max number of devices to return in the result-set.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset         int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	OrganizationId string `protobuf:"bytes,3,opt,name=organization_id,json=orgId,proto3" json:"organization_id,omitempty"`
}

func (x *ListZoneRequest) Reset() {
	*x = ListZoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListZoneRequest) ProtoMessage() {}

func (x *ListZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListZoneRequest.ProtoReflect.Descriptor instead.
func (*ListZoneRequest) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{8}
}

func (x *ListZoneRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListZoneRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListZoneRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type ListZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zones []*GetZonesItem `protobuf:"bytes,1,rep,name=zones,proto3" json:"zones,omitempty"`
}

func (x *ListZoneResponse) Reset() {
	*x = ListZoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListZoneResponse) ProtoMessage() {}

func (x *ListZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListZoneResponse.ProtoReflect.Descriptor instead.
func (*ListZoneResponse) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{9}
}

func (x *ListZoneResponse) GetZones() []*GetZonesItem {
	if x != nil {
		return x.Zones
	}
	return nil
}

type DeleteZoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId int64 `protobuf:"varint,1,opt,name=zone_id,json=zoneID,proto3" json:"zone_id,omitempty"`
}

func (x *DeleteZoneRequest) Reset() {
	*x = DeleteZoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteZoneRequest) ProtoMessage() {}

func (x *DeleteZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteZoneRequest.ProtoReflect.Descriptor instead.
func (*DeleteZoneRequest) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteZoneRequest) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type UpdateZoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zone   *Zone `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
	ZoneId int64 `protobuf:"varint,2,opt,name=zone_id,json=zoneID,proto3" json:"zone_id,omitempty"`
}

func (x *UpdateZoneRequest) Reset() {
	*x = UpdateZoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateZoneRequest) ProtoMessage() {}

func (x *UpdateZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateZoneRequest.ProtoReflect.Descriptor instead.
func (*UpdateZoneRequest) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateZoneRequest) GetZone() *Zone {
	if x != nil {
		return x.Zone
	}
	return nil
}

func (x *UpdateZoneRequest) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type AddUserToZoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId int64 `protobuf:"varint,1,opt,name=zone_id,json=zoneID,proto3" json:"zone_id,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userID,proto3" json:"user_id,omitempty"`
}

func (x *AddUserToZoneRequest) Reset() {
	*x = AddUserToZoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserToZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserToZoneRequest) ProtoMessage() {}

func (x *AddUserToZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserToZoneRequest.ProtoReflect.Descriptor instead.
func (*AddUserToZoneRequest) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{12}
}

func (x *AddUserToZoneRequest) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *AddUserToZoneRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type AddUserToZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string  `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ZoneList []int64 `protobuf:"varint,2,rep,packed,name=zone_list,json=zoneList,proto3" json:"zone_list,omitempty"`
}

func (x *AddUserToZoneResponse) Reset() {
	*x = AddUserToZoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserToZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserToZoneResponse) ProtoMessage() {}

func (x *AddUserToZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserToZoneResponse.ProtoReflect.Descriptor instead.
func (*AddUserToZoneResponse) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{13}
}

func (x *AddUserToZoneResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AddUserToZoneResponse) GetZoneList() []int64 {
	if x != nil {
		return x.ZoneList
	}
	return nil
}

type ZonesOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneOrder []*ZoneOrder `protobuf:"bytes,1,rep,name=zoneOrder,json=zonesOrder,proto3" json:"zoneOrder,omitempty"`
}

func (x *ZonesOrderRequest) Reset() {
	*x = ZonesOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZonesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZonesOrderRequest) ProtoMessage() {}

func (x *ZonesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZonesOrderRequest.ProtoReflect.Descriptor instead.
func (*ZonesOrderRequest) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{14}
}

func (x *ZonesOrderRequest) GetZoneOrder() []*ZoneOrder {
	if x != nil {
		return x.ZoneOrder
	}
	return nil
}

type ZoneOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId    int64 `protobuf:"varint,1,opt,name=zone_id,json=zoneID,proto3" json:"zone_id,omitempty"`
	ZoneOrder int64 `protobuf:"varint,2,opt,name=zone_order,json=zoneOrder,proto3" json:"zone_order,omitempty"`
}

func (x *ZoneOrder) Reset() {
	*x = ZoneOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneOrder) ProtoMessage() {}

func (x *ZoneOrder) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneOrder.ProtoReflect.Descriptor instead.
func (*ZoneOrder) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{15}
}

func (x *ZoneOrder) GetZoneId() int64 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *ZoneOrder) GetZoneOrder() int64 {
	if x != nil {
		return x.ZoneOrder
	}
	return 0
}

type ZonesOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneOrder []*ZoneOrder `protobuf:"bytes,1,rep,name=zoneOrder,json=zonesOrder,proto3" json:"zoneOrder,omitempty"`
}

func (x *ZonesOrderResponse) Reset() {
	*x = ZonesOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zone_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZonesOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZonesOrderResponse) ProtoMessage() {}

func (x *ZonesOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_zone_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZonesOrderResponse.ProtoReflect.Descriptor instead.
func (*ZonesOrderResponse) Descriptor() ([]byte, []int) {
	return file_api_zone_proto_rawDescGZIP(), []int{16}
}

func (x *ZonesOrderResponse) GetZoneOrder() []*ZoneOrder {
	if x != nil {
		return x.ZoneOrder
	}
	return nil
}

var File_api_zone_proto protoreflect.FileDescriptor

var file_api_zone_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x70, 0x69, 0x2f, 0x7a, 0x6f, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5,
	0x05, 0x0a, 0x0a, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x65, 0x75, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65,
	0x76, 0x5f, 0x65, 0x75, 0x69, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x73, 0x65, 0x65, 0x6e, 0x5f, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x6f, 0x6e, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x13, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x6f,
	0x6e, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x17, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x31, 0x0a, 0x14, 0x68, 0x75, 0x6d, 0x61, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x68,
	0x75, 0x6d, 0x61, 0x64, 0x69, 0x74, 0x79, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x6f, 0x6e, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x12, 0x2d, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a,
	0x3c, 0x0a, 0x0e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a,
	0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x27, 0x0a, 0x11, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x93, 0x0d, 0x0a, 0x08, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x76, 0x5f, 0x65, 0x75, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x65, 0x76, 0x5f, 0x65, 0x75, 0x69, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x69, 0x72, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0f, 0x61, 0x69, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x69, 0x72, 0x5f, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x61, 0x69, 0x72, 0x5f, 0x68, 0x75, 0x6d, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6f, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x73,
	0x6f, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x6f, 0x6c, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x73, 0x6f, 0x6c, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10,
	0x73, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6f, 0x69, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x73, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x73, 0x6f, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x61, 0x6b,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x77,
	0x61, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x61, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x61, 0x6b, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x77, 0x61, 0x74, 0x65,
	0x72, 0x5f, 0x6c, 0x65, 0x61, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x18,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x61, 0x6b, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x61, 0x6b, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x6f, 0x6f, 0x72,
	0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64,
	0x6f, 0x6f, 0x72, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x38,
	0x0a, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x17, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x74, 0x76,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x62, 0x61, 0x74, 0x76, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x6f, 0x31, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x72, 0x6f, 0x31, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x6f, 0x32, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x72, 0x6f, 0x32, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x68, 0x5f, 0x73, 0x6f, 0x69, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70,
	0x68, 0x5f, 0x73, 0x6f, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x32, 0x5f, 0x70, 0x70,
	0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x32, 0x5f, 0x70, 0x70, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x76, 0x6f, 0x63, 0x5f, 0x70, 0x70, 0x6d, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x74, 0x76, 0x6f, 0x63, 0x5f, 0x70, 0x70, 0x6d, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x61, 0x70, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x61, 0x70, 0x5f, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x13, 0x62, 0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x53, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a,
	0x11, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x31, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x32,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x32, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x33, 0x18, 0x22, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x33, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x34, 0x18, 0x23, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x35, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x35, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x36, 0x18, 0x25, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x36, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x37, 0x18, 0x26, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x37, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x38, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x38, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x64, 0x63, 0x5f, 0x31, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x63, 0x5f,
	0x31, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x63, 0x5f, 0x32, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x64, 0x63, 0x5f, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x76, 0x5f, 0x31,
	0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x76, 0x5f, 0x31, 0x12, 0x1c, 0x0a,
	0x09, 0x67, 0x70, 0x69, 0x6f, 0x5f, 0x69, 0x6e, 0x5f, 0x31, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x70, 0x69, 0x6f, 0x5f, 0x69, 0x6e, 0x5f, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x67,
	0x70, 0x69, 0x6f, 0x5f, 0x69, 0x6e, 0x5f, 0x32, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x70, 0x69, 0x6f, 0x5f, 0x69, 0x6e, 0x5f, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x70, 0x69,
	0x6f, 0x5f, 0x69, 0x6e, 0x5f, 0x33, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x70,
	0x69, 0x6f, 0x5f, 0x69, 0x6e, 0x5f, 0x33, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x70, 0x69, 0x6f, 0x5f,
	0x69, 0x6e, 0x5f, 0x34, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x70, 0x69, 0x6f,
	0x5f, 0x69, 0x6e, 0x5f, 0x34, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x70, 0x69, 0x6f, 0x5f, 0x6f, 0x75,
	0x74, 0x5f, 0x31, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x70, 0x69, 0x6f, 0x5f,
	0x6f, 0x75, 0x74, 0x5f, 0x31, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x70, 0x69, 0x6f, 0x5f, 0x6f, 0x75,
	0x74, 0x5f, 0x32, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x70, 0x69, 0x6f, 0x5f,
	0x6f, 0x75, 0x74, 0x5f, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x31, 0x18, 0x33, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x31, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x32, 0x18, 0x34, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x32, 0x22, 0xa5, 0x01, 0x0a, 0x04, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x7a, 0x6f, 0x6e, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x7a, 0x6f, 0x6e, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbe, 0x01,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17,
	0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x7a, 0x6f, 0x6e, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x7a, 0x6f, 0x6e, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x29, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x32,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x04, 0x7a, 0x6f,
	0x6e, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x04,
	0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x44, 0x22,
	0x5f, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x1e, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x22, 0x3b, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x5a, 0x6f, 0x6e,
	0x65, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x22, 0x2c, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x44, 0x22, 0x4b, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x44, 0x22, 0x48, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x6f, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x22, 0x51, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x5a,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x7a, 0x6f, 0x6e, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x7a, 0x6f, 0x6e,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x11, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x7a, 0x6f,
	0x6e, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x7a,
	0x6f, 0x6e, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x43, 0x0a, 0x09, 0x5a, 0x6f, 0x6e,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x44, 0x12,
	0x1d, 0x0a, 0x0a, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x43,
	0x0a, 0x12, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x5a, 0x6f,
	0x6e, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x32, 0xa6, 0x03, 0x0a, 0x0b, 0x5a, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x5a,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x7a, 0x6f, 0x6e,
	0x65, 0x73, 0x12, 0x4e, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x2f, 0x7b, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0x47, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12,
	0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x06, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x2f, 0x7b, 0x7a, 0x6f, 0x6e, 0x65, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x57, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x5a,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x1a, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x7a, 0x6f, 0x6e,
	0x65, 0x73, 0x2f, 0x7b, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0x8f, 0x01, 0x0a,
	0x11, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x72, 0x70, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x61,
	0x70, 0x69, 0x42, 0x09, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x62, 0x72, 0x61,
	0x68, 0x69, 0x6d, 0x6f, 0x7a, 0x65, 0x6b, 0x69, 0x63, 0x69, 0x2f, 0x56, 0x61, 0x70, 0x73, 0x56,
	0x34, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x34, 0x2f, 0x61, 0x70, 0x69, 0xaa,
	0x02, 0x0e, 0x43, 0x68, 0x69, 0x72, 0x70, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x41, 0x70, 0x69,
	0xca, 0x02, 0x0e, 0x43, 0x68, 0x69, 0x72, 0x70, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5c, 0x41, 0x70,
	0x69, 0xe2, 0x02, 0x1a, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5c,
	0x43, 0x68, 0x69, 0x72, 0x70, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5c, 0x41, 0x70, 0x69, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_zone_proto_rawDescOnce sync.Once
	file_api_zone_proto_rawDescData = file_api_zone_proto_rawDesc
)

func file_api_zone_proto_rawDescGZIP() []byte {
	file_api_zone_proto_rawDescOnce.Do(func() {
		file_api_zone_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_zone_proto_rawDescData)
	})
	return file_api_zone_proto_rawDescData
}

var file_api_zone_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_api_zone_proto_goTypes = []interface{}{
	(*ZoneDevice)(nil),            // 0: api.ZoneDevice
	(*ZoneDeviceProfile)(nil),     // 1: api.ZoneDeviceProfile
	(*ZoneData)(nil),              // 2: api.ZoneData
	(*Zone)(nil),                  // 3: api.Zone
	(*GetZonesItem)(nil),          // 4: api.GetZonesItem
	(*CreateZoneRequest)(nil),     // 5: api.CreateZoneRequest
	(*GetZoneResponse)(nil),       // 6: api.GetZoneResponse
	(*GetZoneRequest)(nil),        // 7: api.GetZoneRequest
	(*ListZoneRequest)(nil),       // 8: api.ListZoneRequest
	(*ListZoneResponse)(nil),      // 9: api.ListZoneResponse
	(*DeleteZoneRequest)(nil),     // 10: api.DeleteZoneRequest
	(*UpdateZoneRequest)(nil),     // 11: api.UpdateZoneRequest
	(*AddUserToZoneRequest)(nil),  // 12: api.AddUserToZoneRequest
	(*AddUserToZoneResponse)(nil), // 13: api.AddUserToZoneResponse
	(*ZonesOrderRequest)(nil),     // 14: api.ZonesOrderRequest
	(*ZoneOrder)(nil),             // 15: api.ZoneOrder
	(*ZonesOrderResponse)(nil),    // 16: api.ZonesOrderResponse
	nil,                           // 17: api.ZoneDevice.VariablesEntry
	nil,                           // 18: api.ZoneDevice.TagsEntry
	(*emptypb.Empty)(nil),         // 19: google.protobuf.Empty
}
var file_api_zone_proto_depIdxs = []int32{
	2,  // 0: api.ZoneDevice.data:type_name -> api.ZoneData
	1,  // 1: api.ZoneDevice.device_profile_name:type_name -> api.ZoneDeviceProfile
	17, // 2: api.ZoneDevice.variables:type_name -> api.ZoneDevice.VariablesEntry
	18, // 3: api.ZoneDevice.tags:type_name -> api.ZoneDevice.TagsEntry
	0,  // 4: api.GetZonesItem.devices:type_name -> api.ZoneDevice
	3,  // 5: api.CreateZoneRequest.zone:type_name -> api.Zone
	3,  // 6: api.GetZoneResponse.zone:type_name -> api.Zone
	4,  // 7: api.ListZoneResponse.zones:type_name -> api.GetZonesItem
	3,  // 8: api.UpdateZoneRequest.zone:type_name -> api.Zone
	15, // 9: api.ZonesOrderRequest.zoneOrder:type_name -> api.ZoneOrder
	15, // 10: api.ZonesOrderResponse.zoneOrder:type_name -> api.ZoneOrder
	5,  // 11: api.ZoneService.Create:input_type -> api.CreateZoneRequest
	7,  // 12: api.ZoneService.Get:input_type -> api.GetZoneRequest
	8,  // 13: api.ZoneService.List:input_type -> api.ListZoneRequest
	10, // 14: api.ZoneService.Delete:input_type -> api.DeleteZoneRequest
	11, // 15: api.ZoneService.Update:input_type -> api.UpdateZoneRequest
	6,  // 16: api.ZoneService.Create:output_type -> api.GetZoneResponse
	6,  // 17: api.ZoneService.Get:output_type -> api.GetZoneResponse
	9,  // 18: api.ZoneService.List:output_type -> api.ListZoneResponse
	19, // 19: api.ZoneService.Delete:output_type -> google.protobuf.Empty
	6,  // 20: api.ZoneService.Update:output_type -> api.GetZoneResponse
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_zone_proto_init() }
func file_api_zone_proto_init() {
	if File_api_zone_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_zone_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneDeviceProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Zone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetZonesItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateZoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetZoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetZoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListZoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListZoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteZoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateZoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserToZoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserToZoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZonesOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zone_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZonesOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_zone_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_zone_proto_goTypes,
		DependencyIndexes: file_api_zone_proto_depIdxs,
		MessageInfos:      file_api_zone_proto_msgTypes,
	}.Build()
	File_api_zone_proto = out.File
	file_api_zone_proto_rawDesc = nil
	file_api_zone_proto_goTypes = nil
	file_api_zone_proto_depIdxs = nil
}
